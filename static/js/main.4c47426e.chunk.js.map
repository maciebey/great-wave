{"version":3,"sources":["component/Header/Header.tsx","component/Footer/Footer.tsx","component/SvgComponent/SvgComponent.tsx","component/SettingComponent/SettingComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Footer","href","SvgComponent","layer","file","onChange","opacity","color","filterName","xmlns","version","width","height","id","floodColor","result","in","in2","operator","k1","k2","k3","k4","xlinkHref","process","filter","SettingComponent","opacityChange","event","Number","target","value","colorChange","name","className","type","min","max","step","style","backgroundColor","App","canvasRef","renderRef","useState","images","setImages","isLoading","setIsLoading","modalDisplayClass","setModalDisplayClass","useEffect","saveAs","blob","fileName","elem","window","document","createElement","download","body","documentElement","appendChild","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","URL","revokeObjectURL","remove","ref","node","length","map","i","index","newData","handleChange","onClick","htmlToImage","then","canvas","replaceChildren","dataUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c47426e.chunk.js","sourcesContent":["import './Header.css';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>great-wave</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <a href=\"https://www.linkedin.com/in/maciebey/\">Macie Bey</a>\n      <a href=\"https://github.com/maciebey/great-wave\">View on Github</a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { layer } from '../../interfaces';\nimport './SvgComponent.css';\n\nconst iconPath = process.env.PUBLIC_URL + '/assets/';\n\ntype Props = {\n  layer: layer,\n  onChange?: any\n};\n\nconst SvgComponent = ({ layer, onChange }: Props) => {\n  // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   //console.log(event.target.value)\n  //   layer.opacity = Number(event.target.value)\n  //   onChange(layer)\n  // };\n\n  const { file, opacity, color } = layer\n  const filterName = `colorMask${file}`\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"400\" height=\"400\">\n      <defs>\n        <filter id={filterName}>\n          <feFlood floodColor={color} result=\"flood\" />\n          <feComposite in=\"SourceGraphic\" in2=\"flood\" operator=\"arithmetic\" k1=\"1\" k2=\"0\" k3=\"0\" k4=\"0\" />\n        </filter>\n      </defs>\n      <image width=\"100%\" height=\"100%\" xlinkHref={`${iconPath}${file}`} filter={`url(#${filterName})`} opacity={opacity} />\n    </svg>\n  )\n}\n\nexport default SvgComponent;\n","import { layer } from '../../interfaces';\nimport './SettingComponent.css';\n\ntype Props = {\n  layer: layer,\n  onChange?: any\n  // children: JSX.Element,\n};\n\nconst SettingComponent = ({ layer, onChange }: Props) => {\n  const opacityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //console.log(event.target.value)\n    layer.opacity = Number(event.target.value)\n    onChange(layer)\n  };\n  const colorChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    //console.log(event.target.value)\n    layer.color = event.target.value\n    onChange(layer)\n  };\n\n  return (\n    <div>\n      <div>Layer: {layer.name}</div>\n      <div className='opacity-control'>\n        <p>Opacity: {layer.opacity} </p>\n        <input\n          id=\"typeinp\"\n          type=\"range\"\n          min=\"0\" max=\"1\"\n          value={layer.opacity}\n          onChange={(event) => opacityChange(event)}\n          step=\".01\"\n        />\n      </div>\n      <div className='color-control'>\n        <p>Color:</p>\n        <div className='color-display' style={{ backgroundColor: layer.color }}></div>\n        <select value={layer.color} onChange={(event) => colorChange(event)}>\n          <option value=\"#6166fb\">#6166fb</option>\n          <option value=\"#fb6161\">#fb6161</option>\n          <option value=\"#3cda4e\">#3cda4e</option>\n          <option value=\"#c800ff\">#c800ff</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default SettingComponent;\n","import React from 'react';\nimport { Header, Footer, SvgComponent, SettingComponent } from './component';\nimport { layer } from './interfaces';\nimport * as htmlToImage from 'html-to-image';\nimport './App.css';\n\nimport { useState, useEffect } from 'react';\n\n/*\nhttps://stackoverflow.com/questions/55987953/how-do-i-update-states-onchange-in-an-array-of-object-in-react-hooks\nhttps://stackoverflow.com/questions/54150783/react-hooks-usestate-with-object\nhttps://www.carlrippon.com/react-children-with-typescript/\nhttps://webomnizz.com/change-parent-component-state-from-child-using-hooks-in-react/\nhttps://stackoverflow.com/questions/57843369/react-typescript-custom-hooks-property-prop-name-does-not-exist-on-type\n*/\n\nfunction App(this: any) {\n  const [images, setImages] = useState<layer[]>([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [modalDisplayClass, setModalDisplayClass] = useState('hide');\n\n  let canvasRef: HTMLElement;\n  let renderRef: HTMLElement;\n\n  useEffect(() => {\n    // will only load data once on page load\n    if (isLoading === true) {\n      setIsLoading(false);\n      const data: layer[] = [\n        {\n          \"name\": \"one\",\n          \"file\": \"1.png\",\n          \"opacity\": 1,\n          \"color\": \"#6166fb\"\n        },\n        {\n          \"name\": \"two\",\n          \"file\": \"2.png\",\n          \"opacity\": 1,\n          \"color\": \"#fb6161\"\n        },\n        {\n          \"name\": \"three\",\n          \"file\": \"3.png\",\n          \"opacity\": 1,\n          \"color\": \"#3cda4e\"\n        }\n      ]\n      setImages(data)\n    }\n  }, [isLoading]);\n  \n  const handleChange = (layer: layer, index: number) => {\n    const newData: layer[] = [...images]\n    newData[index] = layer;\n    setImages(newData);\n  };\n\n  const closeModal = () => {\n    setModalDisplayClass('hide');\n  }\n\n  /* html-to-image guide\n  * https://betterprogramming.pub/heres-why-i-m-replacing-html2canvas-with-html-to-image-in-our-react-app-d8da0b85eadf\n  */\n  const captureCanvas = () => {\n    if (canvasRef && renderRef) {\n      htmlToImage.toCanvas(canvasRef).then(function(canvas) {\n        renderRef.replaceChildren(canvas);\n      });\n    }\n    setModalDisplayClass('');\n    \n  };\n\n  const saveCanvas = () => {\n    if (canvasRef) {\n      htmlToImage.toPng(canvasRef).then(function (dataUrl) {\n        saveAs(dataUrl, 'my-node.png');\n      });\n    }\n  }\n\n  const saveAs = (blob: any, fileName: any) =>{\n    var elem = window.document.createElement('a');\n    elem.href = blob\n    elem.download = fileName;\n    // elem.style = 'display:none;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n      elem.click();\n    } else {\n      elem.target = '_blank';\n      elem.dispatchEvent(new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      }));\n    }\n    URL.revokeObjectURL(elem.href);\n    elem.remove()\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <main>\n        <div id=\"canvas\">\n          <div ref={node => {if (node) canvasRef = node}}  className=\"img-container\">\n            {images.length && images.map((i, index) => (\n              <SvgComponent layer={i} key={index} />\n            ))}\n            {/* {images.length && images.map((i) => (\n              <img key={i.name} alt={i.name} src={`${iconPath}${i.file}`} style={{opacity: i.opacity}} />\n            ))} */}\n          </div>\n        </div>\n        <div className=\"control-container\">\n          {images.length && images.map((i, index) => (\n            <SettingComponent\n              layer={i}\n              key={index}\n              onChange={(layer:layer) => handleChange(layer, index)}\n            />\n          ))}\n        </div>\n        <div onClick={captureCanvas} className=\"capture-button button\">Capture</div>\n      </main>\n      <Footer></Footer>\n      <div className={'modal ' + modalDisplayClass}>\n        <div className='modal-content'>\n          <div onClick={closeModal} className=\"close-button button\">X</div>\n          <div ref={node => {if (node) renderRef = node}} id=\"append\"></div>\n          <div onClick={saveCanvas} className=\"save-button button\">Save As Png</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}