{"version":3,"sources":["component/Footer/Footer.tsx","component/Header/Header.tsx","component/Modal/Modal.tsx","component/SettingComponent/SettingComponent.tsx","component/SvgComponent/SvgComponent.tsx","config/WaveImageData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","href","Header","Modal","renderRef","canvas","modalDisplay","setModalDisplay","useEffect","replaceChildren","saveCanvas","fileType","promise","htmlToImage","then","dataUrl","saveAs","blob","fileName","elem","window","document","createElement","download","body","documentElement","appendChild","click","target","dispatchEvent","MouseEvent","view","bubbles","cancelable","URL","revokeObjectURL","remove","closeModal","className","onClick","event","stopPropagation","ref","node","id","ColorPickerButton","layer","onChange","useState","displayPicker","setDisplayPicker","color","c","change","type","hex","disableAlpha","SettingComponent","imagePosition","imageArrayLength","positionChange","direction","name","disabled","opacity","min","max","value","Number","opacityChange","step","style","backgroundColor","SvgComponent","file","filterName","xmlns","version","width","height","floodColor","result","in","in2","operator","k1","k2","k3","k4","preserveAspectRatio","xlinkHref","process","filter","WaveImageData","layers","App","isLoading","setIsLoading","images","setImages","setNames","setSetNames","currentSet","setCurrentSet","setCanvas","canvasRef","Object","values","map","item","length","i","index","newIndex","setName","changeObject","newData","swapIndex","temp","handleChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd749795.chunk.js","sourcesContent":["import './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <a href=\"https://www.linkedin.com/in/maciebey/\">Macie Bey</a>\n      <a href=\"https://github.com/maciebey/great-wave\">View on Github</a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './Header.css';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>great-wave</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Dispatch, useEffect } from 'react';\nimport * as htmlToImage from 'html-to-image';\nimport './Modal.css';\n\ntype Props = {\n  canvas: HTMLCanvasElement | undefined,\n  modalDisplay: boolean,\n  setModalDisplay: Dispatch<React.SetStateAction<boolean>>\n};\n\n/* html-to-image guide\n * https://betterprogramming.pub/heres-why-i-m-replacing-html2canvas-with-html-to-image-in-our-react-app-d8da0b85eadf\n*/\nfunction Modal({ canvas, modalDisplay, setModalDisplay }: Props) {\n\n  let renderRef: HTMLElement;\n\n  useEffect(() => {\n    if(canvas){\n      renderRef.replaceChildren(canvas);\n    }\n  });\n\n  const saveCanvas = (fileType: string) => {\n    // return if canvas not set correctly\n    if (!canvas) return;\n\n    let promise: Promise<string>;\n    switch (fileType) {\n      case \"png\":\n        promise = htmlToImage.toPng(canvas);\n        break;\n      case \"jpeg\":\n        promise = htmlToImage.toJpeg(canvas);\n        break;\n      default:\n        // can't proceed without promise set, so just return\n        return;\n    }\n    promise.then((dataUrl) => {\n      // TODO: file naming\n      saveAs(dataUrl, `my-node.${fileType}`);\n    })\n  }\n\n  // taken from example in top comment, maybe simplify\n  const saveAs = (blob: any, fileName: any) =>{\n    var elem = window.document.createElement('a');\n    elem.href = blob\n    elem.download = fileName;\n    // elem.style = 'display:none;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n      elem.click();\n    } else {\n      elem.target = '_blank';\n      elem.dispatchEvent(new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      }));\n    }\n    URL.revokeObjectURL(elem.href);\n    elem.remove()\n  }\n\n  // used with outside area is clicked or close button\n  const closeModal = () => {\n    setModalDisplay(false);\n  }\n\n  const outside = () => {\n    closeModal();\n  }\n\n  // just stop propigation of event, clicks inside modal must hit close button\n  const inside = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <div className={'modal ' + (modalDisplay ? '' : 'hide')} onClick={outside}>\n      <div className='modal-content' onClick={inside}>\n        <div className='modal-header'>\n          <h2>Your New Print!</h2>\n          <button onClick={closeModal} className=\"close-button button\">X</button>\n        </div>\n        <div className='modal-body'>\n          <div ref={node => { if (node) renderRef = node }} id=\"modal-canvas\"></div>\n        </div>\n        <div className='modal-footer'>\n          <button onClick={() => saveCanvas(\"png\")} className=\"save-button button\">Save As Png</button>\n          <button onClick={() => saveCanvas(\"jpeg\")} className=\"save-button button\">Save As Jpeg</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import { useState } from 'react';\nimport { layer, ChangeObject } from '../../config';\nimport { ChromePicker } from 'react-color';\nimport './SettingComponent.css';\n\ntype PickerProps = {\n  layer: layer,\n  onChange?: any\n};\n\n// TODO: latest version of react-color bugged, replace or upgrade https://github.com/casesandberg/react-color/issues/837\nconst ColorPickerButton = ({layer, onChange}:PickerProps) => {\n  const [displayPicker, setDisplayPicker] = useState(false);\n\n  const colorChange = (c: any, event: React.ChangeEvent<HTMLInputElement>) => {\n    const change: ChangeObject = {type: \"layer\", layer:layer}\n    change.layer!.color = c.hex\n    onChange(change)\n  };\n\n  return (\n    <div>\n      <button onClick={ () => setDisplayPicker(true) }>Pick Color</button>\n      {displayPicker && <div className='picker-popover'>\n        <div className='picker-cover' onClick={ () => setDisplayPicker(false) } />\n        <ChromePicker\n          color={layer.color}\n          onChange={ colorChange }\n          disableAlpha={true}\n        />\n      </div>}\n    </div>\n  )\n}\n\ntype Props = {\n  layer: layer,\n  imagePosition: number,\n  imageArrayLength: number,\n  onChange?: any\n};\n\nconst SettingComponent = ({ layer, imagePosition, imageArrayLength, onChange }: Props) => {\n\n  const opacityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const change: ChangeObject = {type: \"layer\", layer:layer}\n    change.layer!.opacity = Number(event.target.value)\n    onChange(change)\n  };\n\n  const positionChange = (direction: string) => {\n    const change: ChangeObject = {type: \"position\", direction:direction}\n    onChange(change)\n  }\n\n  return (\n    <div className='control-main'>\n      <div className='control-header'>\n        <div>Layer: {layer.name}</div>\n        <button onClick={() => positionChange(\"up\")} className=\"button\" disabled={imagePosition === 0}>↑</button>\n        <button onClick={() => positionChange(\"down\")} className=\"button\" disabled={imagePosition === imageArrayLength - 1}>↓</button>\n      </div>\n      <div className='opacity-control'>\n        <p>Opacity: {layer.opacity} </p>\n        <input\n          id=\"typeinp\"\n          type=\"range\"\n          min=\"0\" max=\"1\"\n          value={layer.opacity}\n          onChange={(event) => opacityChange(event)}\n          step=\".01\"\n        />\n      </div>\n      <div className='color-control'>\n        <p>Color:</p>\n        <div className='color-display' style={{ backgroundColor: layer.color }}></div>\n        <ColorPickerButton\n          layer={layer}\n          onChange={(change:ChangeObject) => onChange(change)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SettingComponent;\n","import { layer } from '../../config';\nimport './SvgComponent.css';\n\nconst iconPath = process.env.PUBLIC_URL + '/assets/';\n\ntype Props = {\n  layer: layer,\n  onChange?: any\n};\n\nconst SvgComponent = ({ layer, onChange }: Props) => {\n  // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   //console.log(event.target.value)\n  //   layer.opacity = Number(event.target.value)\n  //   onChange(layer)\n  // };\n\n  const { file, opacity, color } = layer\n  const filterName = `colorMask${file}`\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"400\" height=\"400\">\n      <defs>\n        <filter id={filterName}>\n          <feFlood floodColor={color} result=\"flood\" />\n          <feComposite in=\"SourceGraphic\" in2=\"flood\" operator=\"arithmetic\" k1=\"1\" k2=\"0\" k3=\"0\" k4=\"0\" />\n        </filter>\n      </defs>\n      <image preserveAspectRatio=\"xMidYMax meet\" width=\"100%\" height=\"100%\" xlinkHref={`${iconPath}${file}`} filter={`url(#${filterName})`} opacity={opacity} />\n    </svg>\n  )\n}\n\nexport default SvgComponent;\n","import { NamedLayerSet } from '.';\n\nconst WaveImageData: NamedLayerSet[] = [\n  {\n    name: \"The Great Wave - Hokusai\",\n    layers: [\n      {\n        \"name\": \"Water One\",\n        \"file\": \"set3/blue_light.svg\",\n        \"opacity\": 1,\n        \"color\": \"#c7efef\"\n      },\n      {\n        \"name\": \"Water Two\",\n        \"file\": \"set3/blue_dark.svg\",\n        \"opacity\": 1,\n        \"color\": \"#261a5b\"\n      },\n      {\n        \"name\": \"Water Three\",\n        \"file\": \"set3/blue_med.svg\",\n        \"opacity\": 1,\n        \"color\": \"#059faf\"\n      },\n      {\n        \"name\": \"Spray\",\n        \"file\": \"set3/splash.svg\",\n        \"opacity\": 1,\n        \"color\": \"#ffffff\"\n      }\n    ]\n  },\n  {\n    name: \"A Beautiful Test Wave\",\n    layers: [\n      {\n        \"name\": \"one\",\n        \"file\": \"set1/1.png\",\n        \"opacity\": 1,\n        \"color\": \"#6166fb\"\n      },\n      {\n        \"name\": \"two\",\n        \"file\": \"set1/2.png\",\n        \"opacity\": 1,\n        \"color\": \"#fb6161\"\n      },\n      {\n        \"name\": \"three\",\n        \"file\": \"set1/3.png\",\n        \"opacity\": 1,\n        \"color\": \"#3cda4e\"\n      }\n    ]\n  },\n  {\n    name: \"Test Slices\",\n    layers: [\n      {\n        \"name\": \"one\",\n        \"file\": \"set2/1.png\",\n        \"opacity\": 1,\n        \"color\": \"#6166fb\"\n      },\n      {\n        \"name\": \"two\",\n        \"file\": \"set2/2.png\",\n        \"opacity\": 1,\n        \"color\": \"#fb6161\"\n      },\n      {\n        \"name\": \"three\",\n        \"file\": \"set2/3.png\",\n        \"opacity\": 1,\n        \"color\": \"#3cda4e\"\n      },\n      {\n        \"name\": \"four\",\n        \"file\": \"set2/4.png\",\n        \"opacity\": 1,\n        \"color\": \"#c800ff\"\n      },\n      {\n        \"name\": \"five\",\n        \"file\": \"set2/5.png\",\n        \"opacity\": 1,\n        \"color\": \"#591d69\"\n      },\n      {\n        \"name\": \"six\",\n        \"file\": \"set2/6.png\",\n        \"opacity\": 1,\n        \"color\": \"#2ed6c8\"\n      },\n      {\n        \"name\": \"seven\",\n        \"file\": \"set2/7.png\",\n        \"opacity\": 1,\n        \"color\": \"#ec8320\"\n      },\n      {\n        \"name\": \"eight\",\n        \"file\": \"set2/8.png\",\n        \"opacity\": 1,\n        \"color\": \"#74f17a\"\n      }\n    ]\n  }\n];\n\nexport default WaveImageData;","import { useState, useEffect } from 'react';\nimport { Header, Footer, SvgComponent, SettingComponent, Modal } from './component';\nimport { WaveImageData, layer, ChangeObject } from './config'\nimport * as htmlToImage from 'html-to-image';\nimport './App.css';\n\n\n/*\nhttps://stackoverflow.com/questions/55987953/how-do-i-update-states-onchange-in-an-array-of-object-in-react-hooks\nhttps://stackoverflow.com/questions/54150783/react-hooks-usestate-with-object\nhttps://www.carlrippon.com/react-children-with-typescript/\nhttps://webomnizz.com/change-parent-component-state-from-child-using-hooks-in-react/\nhttps://stackoverflow.com/questions/57843369/react-typescript-custom-hooks-property-prop-name-does-not-exist-on-type\n*/\n\nfunction App(this: any) {\n  \n  const [isLoading, setIsLoading] = useState(true);\n  const [images, setImages] = useState<layer[]>([]);\n  const [setNames, setSetNames] = useState<string[]>();\n  const [currentSet, setCurrentSet] = useState<number>(0);\n  const [canvas, setCanvas] = useState<HTMLCanvasElement>();\n  const [modalDisplay, setModalDisplay] = useState(false);\n\n  let canvasRef: HTMLElement | null = null;\n\n  useEffect(() => {\n    // will only load data once on page load\n    if (isLoading === true) {\n      setIsLoading(false);\n      setSetNames(Object.values(WaveImageData).map(item => item.name));\n      setImages(WaveImageData[currentSet].layers)\n    }\n  }, [isLoading, currentSet]);\n  \n  const handleChange = (changeObject: ChangeObject, index: number) => {\n    // color/opacity\n    if (changeObject.type === \"layer\") {\n      const newData: layer[] = [...images];\n      newData[index] = changeObject.layer!;\n      setImages(newData);\n    }\n    // position\n    else {\n      const swapIndex = (changeObject.direction === \"up\") ? (index - 1) : (index + 1)\n      const newData: layer[] = [...images];\n      const temp = newData[index];\n      newData[index] = newData[swapIndex];\n      newData[swapIndex] = temp;\n      setImages(newData);\n    }\n  };\n\n  const captureCanvas = () => {\n    if (canvasRef) {\n      htmlToImage.toCanvas(canvasRef, {backgroundColor: \"transparent\"}).then(function(c) {\n        setCanvas(c)\n        setModalDisplay(true);\n      });\n    }\n  };\n\n  const changeSets = (newIndex: number) => {\n    setCurrentSet(newIndex)\n    setImages(WaveImageData[newIndex].layers)\n  };\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <main>\n        <div id=\"canvas\">\n          <div ref={node => {if (node) canvasRef = node}}  className=\"img-container\">\n            {images.length && images.map((i, index) => (\n              <SvgComponent layer={i} key={index} />\n            ))}\n          </div>\n          <div className=\"action-container\">\n            {setNames && <select value={currentSet} onChange={(event) => changeSets(Number(event.target.value))}>\n              {setNames.map((setName, index) => (\n                <option value={index} key={setName}>{setName}</option>\n              ))}\n            </select>}\n            <button onClick={captureCanvas} className=\"capture-button button\">Capture</button>\n          </div>\n        </div>\n        <div className=\"control-container\">\n          {images.length && images.map((i, index) => (\n            <SettingComponent\n              layer={i}\n              key={index}\n              imagePosition={index}\n              imageArrayLength={images.length}\n              onChange={(changeObject:ChangeObject) => handleChange(changeObject, index)}\n            />\n          ))}\n        </div>\n      </main>\n      <Footer></Footer>\n      <Modal\n        canvas={canvas}\n        modalDisplay={modalDisplay}\n        setModalDisplay={setModalDisplay} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}